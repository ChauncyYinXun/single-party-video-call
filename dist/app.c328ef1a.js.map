{"version":3,"sources":["app.js"],"names":["webex","forEach","id","el","document","getElementById","value","localStorage","getItem","addEventListener","event","setItem","target","connect","Promise","resolve","window","Webex","init","config","logger","level","meetings","reconnection","enabled","credentials","access_token","on","addedMeetingEvent","type","addedMeeting","meeting","acknowledge","then","confirm","joinMeeting","bindMeetingEvents","decline","registered","register","syncMeetings","body","classList","add","innerText","catch","err","console","error","media","srcObject","stream","members","delta","full","membersData","memberIDs","Object","keys","memberID","memberObject","isUser","isSelf","status","leave","constraints","audio","checked","video","join","getSupportedDevices","sendAudio","sendVideo","mediaSettings","receiveVideo","receiveAudio","receiveShare","sendShare","getMediaStreams","mediaStreams","localStream","localShare","addMedia","preventDefault","destination","create","navigator","mediaDevices","enumerateDevices","devices","hasAudio","filter","device","kind","length","disabled","hasVideo"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["/* eslint-env browser */\r\n\r\n/* global Webex */\r\n\r\n/* eslint-disable camelcase */\r\n/* eslint-disable max-nested-callbacks */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable no-console */\r\n/* eslint-disable require-jsdoc */\r\n/* eslint-disable arrow-body-style */\r\n\r\n// Declare some globals that we'll need throughout\r\nlet webex;\r\n\r\n// First, let's wire our form fields up to localStorage so we don't have to\r\n// retype things everytime we reload the page.\r\n\r\n[\"access-token\", \"invitee\"].forEach((id) => {\r\n  const el = document.getElementById(id);\r\n\r\n  el.value = localStorage.getItem(id);\r\n  el.addEventListener(\"change\", (event) => {\r\n    localStorage.setItem(id, event.target.value);\r\n  });\r\n});\r\n\r\n// There's a few different events that'll let us know we should initialize\r\n// Webex and start listening for incoming calls, so we'll wrap a few things\r\n// up in a function.\r\nfunction connect() {\r\n  return new Promise((resolve) => {\r\n    if (!webex) {\r\n      // eslint-disable-next-line no-multi-assign\r\n      webex = window.webex = Webex.init({\r\n        config: {\r\n          logger: {\r\n            level: \"debug\",\r\n          },\r\n          meetings: {\r\n            reconnection: {\r\n              enabled: true,\r\n            },\r\n          },\r\n          // Any other sdk config we need\r\n        },\r\n        credentials: {\r\n          access_token: document.getElementById(\"access-token\").value,\r\n        },\r\n      });\r\n    }\r\n\r\n    // Listen for added meetings\r\n    webex.meetings.on(\"meeting:added\", (addedMeetingEvent) => {\r\n      if (addedMeetingEvent.type === \"INCOMING\") {\r\n        const addedMeeting = addedMeetingEvent.meeting;\r\n\r\n        // Acknowledge to the server that we received the call on our device\r\n        addedMeeting.acknowledge(addedMeetingEvent.type).then(() => {\r\n          if (confirm(\"Answer incoming call\")) {\r\n            joinMeeting(addedMeeting);\r\n            bindMeetingEvents(addedMeeting);\r\n          } else {\r\n            addedMeeting.decline();\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Register our device with Webex cloud\r\n    if (!webex.meetings.registered) {\r\n      webex.meetings\r\n        .register()\r\n        // Sync our meetings with existing meetings on the server\r\n        .then(() => webex.meetings.syncMeetings())\r\n        .then(() => {\r\n          // This is just a little helper for our selenium tests and doesn't\r\n          // really matter for the example\r\n          document.body.classList.add(\"listening\");\r\n          document.getElementById(\"connection-status\").innerText = \"connected\";\r\n          // Our device is now connected\r\n          resolve();\r\n        })\r\n        // This is a terrible way to handle errors, but anything more specific is\r\n        // going to depend a lot on your app\r\n        .catch((err) => {\r\n          console.error(err);\r\n          // we'll rethrow here since we didn't really *handle* the error, we just\r\n          // reported it\r\n          throw err;\r\n        });\r\n    } else {\r\n      // Device was already connected\r\n      resolve();\r\n    }\r\n  });\r\n}\r\n\r\n// Similarly, there are a few different ways we'll get a meeting Object, so let's\r\n// put meeting handling inside its own function.\r\nfunction bindMeetingEvents(meeting) {\r\n  // call is a call instance, not a promise, so to know if things break,\r\n  // we'll need to listen for the error event. Again, this is a rather naive\r\n  // handler.\r\n  meeting.on(\"error\", (err) => {\r\n    console.error(err);\r\n  });\r\n\r\n  // Handle media streams changes to ready state\r\n  meeting.on(\"media:ready\", (media) => {\r\n    if (!media) {\r\n      return;\r\n    }\r\n    if (media.type === \"local\") {\r\n      document.getElementById(\"self-view\").srcObject = media.stream;\r\n    }\r\n    if (media.type === \"remoteVideo\") {\r\n      document.getElementById(\"remote-view-video\").srcObject = media.stream;\r\n    }\r\n    if (media.type === \"remoteAudio\") {\r\n      document.getElementById(\"remote-view-audio\").srcObject = media.stream;\r\n    }\r\n  });\r\n\r\n  // Handle media streams stopping\r\n  meeting.on(\"media:stopped\", (media) => {\r\n    // Remove media streams\r\n    if (media.type === \"local\") {\r\n      document.getElementById(\"self-view\").srcObject = null;\r\n    }\r\n    if (media.type === \"remoteVideo\") {\r\n      document.getElementById(\"remote-view-video\").srcObject = null;\r\n    }\r\n    if (media.type === \"remoteAudio\") {\r\n      document.getElementById(\"remote-view-audio\").srcObject = null;\r\n    }\r\n  });\r\n\r\n  // Update participant info\r\n  meeting.members.on(\"members:update\", (delta) => {\r\n    const { full: membersData } = delta;\r\n    const memberIDs = Object.keys(membersData);\r\n\r\n    memberIDs.forEach((memberID) => {\r\n      const memberObject = membersData[memberID];\r\n\r\n      // Devices are listed in the memberships object.\r\n      // We are not concerned with them in this demo\r\n      if (memberObject.isUser) {\r\n        if (memberObject.isSelf) {\r\n          document.getElementById(\"call-status-local\").innerText =\r\n            memberObject.status;\r\n        } else {\r\n          document.getElementById(\"call-status-remote\").innerText =\r\n            memberObject.status;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  // Of course, we'd also like to be able to end the call:\r\n  document.getElementById(\"hangup\").addEventListener(\"click\", () => {\r\n    meeting.leave();\r\n  });\r\n}\r\n\r\n// Join the meeting and add media\r\nfunction joinMeeting(meeting) {\r\n  // Get constraints\r\n  const constraints = {\r\n    audio: document.getElementById(\"constraints-audio\").checked,\r\n    video: document.getElementById(\"constraints-video\").checked,\r\n  };\r\n\r\n  return meeting.join().then(() => {\r\n    return meeting\r\n      .getSupportedDevices({\r\n        sendAudio: constraints.audio,\r\n        sendVideo: constraints.video,\r\n      })\r\n      .then(({ sendAudio, sendVideo }) => {\r\n        const mediaSettings = {\r\n          receiveVideo: constraints.video,\r\n          receiveAudio: constraints.audio,\r\n          receiveShare: false,\r\n          sendShare: false,\r\n          // chauncy changes\r\n          sendVideo: true,\r\n          sendAudio: true,\r\n        };\r\n\r\n        return meeting.getMediaStreams(mediaSettings).then((mediaStreams) => {\r\n          const [localStream, localShare] = mediaStreams;\r\n\r\n          meeting.addMedia({\r\n            localShare,\r\n            localStream,\r\n            mediaSettings,\r\n          });\r\n        });\r\n      });\r\n  });\r\n}\r\n\r\n// Now, let's set up incoming call handling\r\ndocument.getElementById(\"credentials\").addEventListener(\"submit\", (event) => {\r\n  // let's make sure we don't reload the page when we submit the form\r\n  event.preventDefault();\r\n\r\n  // The rest of the incoming call setup happens in connect();\r\n  connect();\r\n});\r\n\r\n// And finally, let's wire up dialing\r\ndocument.getElementById(\"dialer\").addEventListener(\"submit\", (event) => {\r\n  // again, we don't want to reload when we try to dial\r\n  event.preventDefault();\r\n\r\n  const destination = document.getElementById(\"invitee\").value;\r\n\r\n  // we'll use `connect()` (even though we might already be connected or\r\n  // connecting) to make sure we've got a functional webex instance.\r\n  connect()\r\n    .then(() => {\r\n      // Create the meeting\r\n      return webex.meetings.create(destination).then((meeting) => {\r\n        // Call our helper function for binding events to meetings\r\n        bindMeetingEvents(meeting);\r\n\r\n        return joinMeeting(meeting);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      // Report the error\r\n      console.error(error);\r\n\r\n      // Implement error handling here\r\n    });\r\n});\r\n\r\n// Use enumerateDevices API to check/uncheck and disable checkboxex (if necessary)\r\n// for Audio and Video constraints\r\nwindow.addEventListener(\"load\", () => {\r\n  // Get elements from the DOM\r\n  const audio = document.getElementById(\"constraints-audio\");\r\n  const video = document.getElementById(\"constraints-video\");\r\n\r\n  // Get access to hardware source of media data\r\n  // For more info about enumerateDevices: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices\r\n  if (\r\n    navigator &&\r\n    navigator.mediaDevices &&\r\n    navigator.mediaDevices.enumerateDevices\r\n  ) {\r\n    navigator.mediaDevices\r\n      .enumerateDevices()\r\n      .then((devices) => {\r\n        // Check if navigator has audio\r\n        const hasAudio =\r\n          devices.filter((device) => device.kind === \"audioinput\").length > 0;\r\n\r\n        // Check/uncheck and disable checkbox (if necessary) based on the results from the API\r\n        audio.checked = hasAudio;\r\n        audio.disabled = !hasAudio;\r\n\r\n        // Check if navigator has video\r\n        const hasVideo =\r\n          devices.filter((device) => device.kind === \"videoinput\").length > 0;\r\n\r\n        // Check/uncheck and disable checkbox (if necessary) based on the results from the API\r\n        video.checked = hasVideo;\r\n        video.disabled = !hasVideo;\r\n      })\r\n      .catch((error) => {\r\n        // Report the error\r\n        console.error(error);\r\n      });\r\n  } else {\r\n    // If there is no media data, automatically uncheck and disable checkboxes\r\n    // for audio and video\r\n    audio.checked = false;\r\n    audio.disabled = true;\r\n\r\n    video.checked = false;\r\n    video.disabled = true;\r\n  }\r\n});\r\n"]}